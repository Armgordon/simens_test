@use "sass:map";

/** Application palette available colors (names, HEX-codes and RGB(A) values) */
$DEMO-COLORS: (
  "transparent": transparent,
  "border-grey": #444,
  "light-grey": #a5a5a5,
  "chart-blue": #6892ff,
);

/** Apply color from application palette to arbitrary CSS property */
@mixin use-demo-color($property, $key, $important:null) {
  #{$property}: map.get($DEMO-COLORS, $key) $important;
}

/** Apply color from application palette to `background-color` CSS property */
@mixin use-demo-background-color($key) {
  @include use-demo-color(background-color, $key);
}

/** Apply color from application palette to `color` CSS property */
@mixin use-demo-text-color($key) {
  @include use-demo-color(color, $key);
}

/** Apply color from application palette to `fill` CSS property */
@mixin use-demo-fill-color($key, $important:null) {
  @include use-demo-color(fill, $key, $important);
}

/** Apply color from application palette to `border-color` CSS property */
@mixin use-demo-border-color($key) {
  @include use-demo-color(border-color, $key);
}

/** Apply color from application palette to `color` CSS property */
@mixin use-demo-stroke-color($key) {
  @include use-demo-color(stroke, $key);
}

/** Application palette available box shadows (all values for `box-shadow` property) */
$DEMO-SHADOWS: (
  "medium": 0 2px 6px #999,
);

/** Apply `box-shadow` property value from application palette to stylesheet */
@mixin use-demo-box-shadow($key) {
  box-shadow: map.get($DEMO-SHADOWS, $key);
}
